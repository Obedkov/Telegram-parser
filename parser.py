import json
import lxml
import requests
from bs4 import BeautifulSoup
import time
from telebot import TeleBot
from telebot import types
import emoji

bot = TeleBot('Token')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = types.InlineKeyboardMarkup(row_width = 1)
    item_1 = types.InlineKeyboardButton('‚óÄ–§–æ–Ω–¥–æ–≤—ã–π –∏ —Å—Ä–æ—á–Ω—ã–π —Ä—ã–Ω–æ–∫', callback_data = 'stock_market')
    item_2 = types.InlineKeyboardButton('‚óÄ–í—ã—Å—Ç–∞–≤–∏—Ç—å —Å–∏–≥–Ω–∞–ª—ã', callback_data = 'signal')
    item_3 = types.InlineKeyboardButton('‚óÄ–û –Ω–∞—Å', callback_data = 'about')
    markup.add(item_1, item_2, item_3)
    return markup

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –ø–æ –∫–Ω–æ–ø–∫–µ "satrt" –∏ —Å–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(commands = ['start'])
def start(message):

    markup = types.InlineKeyboardMarkup(row_width = 1)
    item_1 = types.InlineKeyboardButton('‚óÄ–§–æ–Ω–¥–æ–≤—ã–π –∏ —Å—Ä–æ—á–Ω—ã–π —Ä—ã–Ω–æ–∫', callback_data = 'stock_market')
    item_2 = types.InlineKeyboardButton('‚óÄ–í—ã—Å—Ç–∞–≤–∏—Ç—å —Å–∏–≥–Ω–∞–ª—ã', callback_data = 'signal')
    item_3 = types.InlineKeyboardButton('‚óÄ–û –Ω–∞—Å', callback_data = 'about')
    markup.add(item_1, item_2, item_3)

    bot.send_message(message.chat.id, '<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', parse_mode='HTML', reply_markup=markup)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∫ –∫–Ω–æ–ø–∫–∞–º
@bot.callback_query_handler(func=lambda call:True)
def callback(call):
    if call.message:
        if call.data == 'stock_market':
            bot.send_message(call.message.chat.id, '–§–æ–Ω–¥–æ–≤—ã–π –∏ —Å—Ä–æ—á–Ω—ã–π —Ä—ã–Ω–æ–∫\n\n'
                                                   '–ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n'
                                                   '‚ö´–ê–∫—Ü–∏–∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏;\n'
                                                   '‚ö´–§—å—é—á–µ—Ä—Å—ã –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏;\n\n'
                                                   '–ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –±–∏—Ä–∂–∏:\n'
                                                   'üá∑üá∫–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –±–∏—Ä–∂–∞\n\n'
                                                   '<s>üá∫üá∏–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–µ –±–∏—Ä–∂–∏</s>\n\n' +
                             '<i>–ü–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –ø—Ä–∏—á–∏–Ω–∞–º\n–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–≥–æ —Ä—ã–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.</i>',
                             parse_mode='HTML')

            markup_price = types.InlineKeyboardMarkup(row_width=1)
            item_1 = types.InlineKeyboardButton('‚óÄ–°—Ç–æ–∏–º–æ—Å—Ç—å –∞–∫—Ü–∏–π', callback_data='share_price')
            item_2 = types.InlineKeyboardButton('‚óÄ–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu')
            markup_price.add(item_1, item_2)
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=markup_price)

        elif call.data == 'signal':
            bot.send_message(call.message.chat.id, 'loading')
        elif call.data == 'about':
            bot.send_message(call.message.chat.id, '    –ú—ã —è–≤–ª—è–µ–º—Å—è —Ä–∞—Å—Ç—É—â–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç'\
                                                   ' –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞ –∏ —Ç—Ä–µ–π–¥–µ—Ä–∞, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –∏ –≤—ã–±–æ—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π')
        elif call.data == 'main_menu':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=main_menu())
        elif call.data == 'share_price':
            tiker = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä')

            def search_tiker(message):
                bot.register_next_step_handler(tiker, search)

# –î–µ–ª–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º —Å—Ç—Ä–æ—á–∫—É –≤–≤–æ–¥–∞
@bot.message_handler(content_types=['text'])
def search(message):
    bot.send_message(message.chat.id, '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å')
    url = f'https://www.tinkoff.ru/invest/recommendations/?query=' + message.text
    headers = {
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36'}
    full_page = requests.get(url, headers=headers)
    soup = (BeautifulSoup(full_page.text, 'lxml'))
    data = soup.findAll('span', {'class': 'Money-module__money_p_VHJ'})
    data = data[0].text[:6].replace('√Ç', '').replace(' ', '').replace(',', '.')
    currency = f'–°—Ç–æ–∏–º–æ—Å—Ç—å –∞–∫—Ü–∏–∏: {float(data)}‚ÇΩ'
    bot.send_message(message.chat.id, currency)

bot.polling(none_stop=True)


